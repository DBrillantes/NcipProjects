@model PagedList.IPagedList<NCIP.ViewModels.ProjectTableViewModel>
@using PagedList.Mvc;
@using (Html.BeginForm("Index", "Project", FormMethod.Get, new { }))
{
    <input id="SearchString" name="SearchString" class="searchBox" type="text" value="@Request.QueryString["SearchString"]" />
    <input type="submit" value="Search" />
}
    <br />
@if (User.Identity.IsAuthenticated&& User.IsInRole("Encoder"))
{
    @Html.ActionLink("Create New", "Create", new { controller = @HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString(), returnURL = @HttpContext.Current.Request.Url.AbsoluteUri }, new { @class = "btn btn-primary" })
}
<hr />

<table id="projects-table" class="table-responsive table-striped table-hover table-bordered table-condensed">
    <thead>
        <tr>
            <th class="col-md-2">
                @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().projectTitle).ToHtmlString(), "Index", new { sortOrder = ViewBag.SortParamProjectTitle, SearchString = @Request.QueryString["SearchString"] })
            </th>
            <th class="col-sm-2">
                @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Company.Name).ToHtmlString(), "Index", new { sortOrder = ViewBag.SortParamProjectTitle, SearchString = @Request.QueryString["SearchString"] })

            </th>
            <th class="col-sm-2">
                @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Person.FullName).ToHtmlString(), "Index", new { sortOrder = ViewBag.SortParamProjectTitle, SearchString = @Request.QueryString["SearchString"] })
            </th>
            <th class="col-sm-2">
                @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Stage.StageName).ToHtmlString(), "Index", new { sortOrder = ViewBag.SortParamProjectTitle, SearchString = @Request.QueryString["SearchString"] })
            </th>
            <th class="col-sm-1">
                @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().projectType).ToHtmlString(), "Index", new { sortOrder = ViewBag.SortParamProjectTitle, SearchString = @Request.QueryString["SearchString"] })
            </th>
            <th class="col-sm-1">
                @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().reference).ToHtmlString(), "Index", new { sortOrder = ViewBag.SortParamProjectTitle, SearchString = @Request.QueryString["SearchString"] })
            </th>
            <th class="col-sm-1">
                @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().timeStamp).ToHtmlString(), "Index", new { sortOrder = ViewBag.SortParamProjectTitle, SearchString = @Request.QueryString["SearchString"] })
            </th>
            @*<th></th>*@
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ActionLink(item.projectTitle, "Details", new { id = item.ID })

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Person.FullName)

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stage.StageName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.projectType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.reference)
                </td>
                <td>
                    @{
                        string formattedTime = item.timeStamp.ToString("MMM dd, yyyy");
                    }
                    @Html.DisplayFor(modelItem => formattedTime)
                </td>
                @*<td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                    </td>*@
            </tr>
        }
    </tbody>

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
<p></p>

@section Scripts {
}